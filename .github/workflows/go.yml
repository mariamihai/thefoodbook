name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          check-latest: true
          go-version-file: ./go.mod

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: -v -c ./.golangci.yml

          # show only new issues if it's a pull request
          # only-new-issues: true

          # all caching functionality will be complete disabled, takes precedence over all other caching options
          # skip-cache: true

          # don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          check-latest: true
          go-version-file: ./go.mod

      - name: Verify dependencies
        run: go mod verify

      - run: mkdir -p ./files

      - name: Test & Generate Coverage and Report
        run: |
          go test "./..." -coverprofile="./files/coverage.out" -covermode=count -json > ./files/report.json

      - uses: actions/upload-artifact@v3
        with:
          name: coverage.out
          path: ./files/coverage.out
          if-no-files-found: warn

      - uses: actions/upload-artifact@v3
        with:
          name: report.json
          path: ./files/report.json
          if-no-files-found: warn

      - name: Display structure of files
        run: ls -R

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v2
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - uses: actions/download-artifact@v3
        with:
          name: coverage.out
          path: ./files

      - uses: actions/download-artifact@v3
        with:
          name: report.json
          path: ./files

      - name: Display structure of downloaded files
        run: ls -R

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.go.tests.reportPath=files/report.json
            -Dsonar.go.coverage.reportPaths=files/coverage.out
            -Dsonar.sources=.

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          check-latest: true
          go-version-file: ./go.mod

      - name: Build
        run: go build ./cmd/thefoodbook
